@page "/grid-detail"

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
    <!-- 상단 그리드 -->
    <MudPaper Elevation="2" Class="pa-4 mb-4">
        <MudText Typo="Typo.h6" Class="mb-3">데이터 목록</MudText>
        <MudDataGrid T="DataItem"
                     Items="@dataItems"
                     Dense="true"
                     Hover="true"
                     ReadOnly="true"
                     SelectedItemChanged="OnRowClick"
                     RowClick="@((DataGridRowClickEventArgs<DataItem> args) => OnRowClick(args.Item))"
                     Height="300px">
            <Columns>
                <PropertyColumn Property="x => x.Id" Title="ID" />
                <PropertyColumn Property="x => x.Title" Title="제목" />
                <PropertyColumn Property="x => x.Category" Title="카테고리" />
                <PropertyColumn Property="x => x.CreatedDate" Title="작성일" Format="yyyy-MM-dd" />
                <PropertyColumn Property="x => x.Status" Title="상태" />
            </Columns>
        </MudDataGrid>
    </MudPaper>

    <!-- 하단 상세 정보 입력 폼 -->
    <MudPaper Elevation="2" Class="pa-4">
        <MudText Typo="Typo.h6" Class="mb-3">상세 정보</MudText>

        <MudGrid>
            <!-- 선택/내용/공통사용 -->
            <MudItem xs="12">
                <MudGrid AlignItems="Center" Style="min-height: 40px;">
                    <MudItem xs="2" Class="d-flex align-center">
                        <MudText Typo="Typo.body1" Class="font-weight-bold">선택</MudText>
                    </MudItem>
                    <MudItem xs="8" Class="d-flex align-center">
                        <MudText Typo="Typo.body1">내용</MudText>
                    </MudItem>
                    <MudItem xs="2" Class="d-flex align-center justify-end">
                        <MudCheckBox @bind-Value="selectedItem.IsShared" Label="공통사용" Disabled="@(!IsItemSelected)" />
                    </MudItem>
                </MudGrid>
                <MudDivider Class="my-2" />
            </MudItem>

            <!-- ID -->
            <MudItem xs="12">
                <MudGrid AlignItems="Center">
                    <MudItem xs="2" Class="d-flex align-center">
                        <MudText Typo="Typo.body1" Class="font-weight-bold">ID</MudText>
                    </MudItem>
                    <MudItem xs="10">
                        <MudTextField @bind-Value="selectedItem.Id" Variant="Variant.Outlined" Margin="Margin.Dense" Style="width: 100%;" ReadOnly="true" />
                    </MudItem>
                </MudGrid>
                <MudDivider Class="my-2" />
            </MudItem>

            <!-- 제목 -->
            <MudItem xs="12">
                <MudGrid AlignItems="Center">
                    <MudItem xs="2" Class="d-flex align-center">
                        <MudText Typo="Typo.body1" Class="font-weight-bold">Title</MudText>
                    </MudItem>
                    <MudItem xs="10">
                        <MudTextField @bind-Value="selectedItem.Title"
                                      Placeholder="제목을 입력하세요"
                                      Variant="Variant.Outlined"
                                      Margin="Margin.Dense"
                                      Style="width: 100%;"
                                      Disabled="@(!IsItemSelected)" />
                    </MudItem>
                </MudGrid>
                <MudDivider Class="my-2" />
            </MudItem>

            <!-- 카테고리 -->
            <MudItem xs="12">
                <MudGrid AlignItems="Center">
                    <MudItem xs="2" Class="d-flex align-center">
                        <MudText Typo="Typo.body1" Class="font-weight-bold">Category</MudText>
                    </MudItem>
                    <MudItem xs="10">
                        <MudTextField @bind-Value="selectedItem.Category"
                                      Placeholder="카테고리를 입력하세요"
                                      Variant="Variant.Outlined"
                                      Margin="Margin.Dense"
                                      Style="width: 100%;"
                                      Disabled="@(!IsItemSelected)" />
                    </MudItem>
                </MudGrid>
                <MudDivider Class="my-2" />
            </MudItem>

            <!-- 설명 -->
            <MudItem xs="12">
                <MudGrid AlignItems="Start">
                    <MudItem xs="2" Class="d-flex align-start pt-3">
                        <MudText Typo="Typo.body1" Class="font-weight-bold">Description</MudText>
                    </MudItem>
                    <MudItem xs="10">
                        <MudTextField @bind-Value="selectedItem.Description"
                                      Placeholder="설명을 입력하세요"
                                      Variant="Variant.Outlined"
                                      Lines="8"
                                      Margin="Margin.Dense"
                                      Style="width: 100%;"
                                      Disabled="@(!IsItemSelected)" />
                    </MudItem>
                </MudGrid>
            </MudItem>

            <!-- 버튼 영역 -->
            <MudItem xs="12" Class="mt-4">
                <MudGrid Justify="Justify.FlexEnd" Spacing="2">
                    <MudItem>
                        <MudButton Variant="Variant.Outlined"
                                   Color="Color.Primary"
                                   Disabled="@(!IsItemSelected)"
                                   OnClick="ClearSelection">
                            초기화
                        </MudButton>
                    </MudItem>
                    <MudItem>
                        <MudButton Variant="Variant.Filled"
                                   Color="Color.Primary"
                                   Disabled="@(!IsItemSelected)"
                                   OnClick="SaveItem">
                            저장
                        </MudButton>
                    </MudItem>
                </MudGrid>
            </MudItem>
        </MudGrid>
    </MudPaper>
</MudContainer>

@code {
    private List<DataItem> dataItems = new();

    private DataItem selectedItem = new();

    private bool IsItemSelected => selectedItem.Id > 0;

    protected override void OnInitialized()
    {
        // 샘플 데이터
        dataItems = new List<DataItem>
        {
            new DataItem { Id = 1, Title = "첫 번째 항목", Category = "개발", Description = "첫 번째 항목에 대한 상세 설명입니다.\n여러 줄로 구성된 설명 내용입니다.", CreatedDate = DateTime.Now.AddDays(-5), Status = "활성", IsShared = true },
            new DataItem { Id = 2, Title = "두 번째 항목", Category = "디자인", Description = "두 번째 항목에 대한 상세 설명입니다.\n디자인 관련 내용을 다룹니다.", CreatedDate = DateTime.Now.AddDays(-3), Status = "대기", IsShared = false },
            new DataItem { Id = 3, Title = "세 번째 항목", Category = "기획", Description = "세 번째 항목에 대한 상세 설명입니다.\n기획 단계의 내용입니다.", CreatedDate = DateTime.Now.AddDays(-1), Status = "활성", IsShared = true },
            new DataItem { Id = 4, Title = "네 번째 항목", Category = "테스트", Description = "네 번째 항목에 대한 상세 설명입니다.\n테스트 관련 내용을 포함합니다.", CreatedDate = DateTime.Now, Status = "완료", IsShared = false },
            new DataItem { Id = 5, Title = "다섯 번째 항목", Category = "운영", Description = "다섯 번째 항목에 대한 상세 설명입니다.\n운영 관련 사항들을 다룹니다.", CreatedDate = DateTime.Now.AddDays(-7), Status = "활성", IsShared = true }
        };
    }

    private void OnRowClick(DataItem item)
    {
        selectedItem = new DataItem
            {
                Id = item.Id,
                Title = item.Title,
                Category = item.Category,
                Description = item.Description,
                CreatedDate = item.CreatedDate,
                Status = item.Status,
                IsShared = item.IsShared
            };

        StateHasChanged();
    }

    private void ClearSelection()
    {
        selectedItem = new DataItem();
        StateHasChanged();
    }

    private void SaveItem()
    {
        if (selectedItem.Id > 0)
        {
            var originalItem = dataItems.FirstOrDefault(x => x.Id == selectedItem.Id);
            if (originalItem != null)
            {
                originalItem.Title = selectedItem.Title;
                originalItem.Category = selectedItem.Category;
                originalItem.Description = selectedItem.Description;
                originalItem.IsShared = selectedItem.IsShared;
            }

            Console.WriteLine("저장되었습니다.");
        }
    }

    public class DataItem
    {
        public int Id { get; set; }
        public string Title { get; set; } = "";
        public string Category { get; set; } = "";
        public string Description { get; set; } = "";
        public DateTime CreatedDate { get; set; }
        public string Status { get; set; } = "";
        public bool IsShared { get; set; }
    }
}
